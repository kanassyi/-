import numpy as np
import sounddevice as sd

fs = 44100  # サンプリングレート

def triangle_wave(frequency, duration, fs=44100):
    t = np.linspace(0, duration/1000, int(fs*duration/1000), endpoint=False)
    # 0〜1の鋸波を作り、-1〜1に変換
    wave = 2 * np.abs(2 * (t * frequency % 1) - 1) - 1
    return wave * 0.5  # 音量調整

def rest(dur_ms):
    """休符（無音）を dur_ms ミリ秒分作る"""
    n = int(round(fs * dur_ms / 1000))
    return np.zeros(n)


# 音階（Dメジャーに必要な音を登録）
bass_notes = {
    "D2":73,
    "E2": 82,
    "F#2": 92,
    "G2": 98,
    "A2": 110,
    "B2": 123,
    "C#3":138,
    "D3": 146,
}

# BPM設定
BPM = 120
quarter_note_ms = 60000 / BPM  # 4分音符/ms = 60000ms/BPM

# 音価を文字で表現（BPM連動）
durations = {
    "shi": quarter_note_ms,       # 4分音符
    "ha": quarter_note_ms / 2,    # 8分音符
    "ni": quarter_note_ms * 2,    # 2分音符
    "zen": quarter_note_ms * 4,    # 全音符
    "ju": quarter_note_ms / 4,    # 16分音符
}

# 音価計算関数（付点や三連符にも対応）
def get_duration(note_val):
    if note_val.endswith('.'):  # 付点
        base = note_val[:-1]
        return durations[base] * 1.5
    elif note_val.endswith('3'): # 三連符
        base = note_val[:-1]
        return durations[base] / 3
    else:
        return durations[note_val]


# ベース
bass_line = [
    ("D3", "ha"),("REST", "ha"), ("A2", "ha"), ("REST", "ha"),("D3", "ha"),("REST", "ha"), ("A2", "ha"), ("REST", "ha"),
    ("D3", "ha"),("REST", "ha"), ("A2", "ha"), ("REST", "ha"),("D3", "ha"),("REST", "ha"), ("D3", "ha"), ("C#3", "ha"),
    ("B2", "ha"),("REST", "ha"), ("F#2", "ha"), ("REST", "ha"),("B2", "ha"),("REST", "ha"), ("F#2", "ha"), ("REST", "ha"),
    ("B2", "ha"),("REST", "ha"), ("F#2", "ha"), ("REST", "ha"),("B2", "ha"),("REST", "ha"), ("B2", "ha"), ("A2", "ha"),
    ("G2", "ha"),("REST", "ha"), ("D2", "ha"), ("REST", "ha"),("G2", "ha"),("REST", "ha"), ("D3", "ha"), ("REST", "ha"),
    ("G2", "ha"),("REST", "ha"), ("D2", "ha"), ("REST", "ha"),("G2", "ha"),("REST", "ha"), ("G2", "ha"), ("REST", "ha"),
    ("A2", "ha"),("REST", "ha"), ("E2", "ha"), ("REST", "ha"),("A2", "ha"),("REST", "ha"), ("E2", "ha"), ("REST", "ha"),
    ("A2", "ha"),("REST", "ha"), ("E2", "ha"), ("REST", "ha"),("A2", "ha"),("REST", "ha"), ("B2", "ha"), ("C#3", "ha"),
    ("D3", "ha"),("REST", "ha"), ("A2", "ha"), ("REST", "ha"),("D3", "ha"),("REST", "ha"), ("A2", "ha"), ("REST", "ha"),
    ("D3", "ha"),("REST", "ha"), ("A2", "ha"), ("REST", "ha"),("D3", "ha"),("REST", "ha"), ("A2", "ha"), ("REST", "ha"),
    ("D3", "zen"),
]

# 最後に挿入する休符（音の切れ目用）
cut_rest = 10  # ms

# 波形
bass = np.concatenate([
    np.concatenate([triangle_wave(bass_notes[n], get_duration(d)), rest(cut_rest)]) if n != "REST"
    else rest(get_duration(d) + cut_rest)
    for n, d in bass_line
])



# 再生
sd.play(bass, fs)
sd.wait()
